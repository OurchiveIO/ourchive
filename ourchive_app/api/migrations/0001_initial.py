# Generated by Django 2.2.2 on 2019-06-11 16:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('curator_title', models.CharField(max_length=200)),
                ('rating', models.IntegerField()),
                ('description', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('anon_comments_permitted', models.BooleanField(default=False)),
                ('comments_permitted', models.BooleanField(default=False)),
                ('is_private', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('number', models.IntegerField()),
                ('text', models.TextField()),
                ('audio_url', models.CharField(max_length=600)),
                ('audio_length', models.BigIntegerField()),
                ('image_url', models.CharField(max_length=600)),
                ('image_alt_text', models.CharField(max_length=600)),
                ('image_format', models.CharField(max_length=100)),
                ('image_size', models.CharField(max_length=100)),
                ('summary', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type_label', models.CharField(max_length=200)),
                ('send_email', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='TagType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.CharField(max_length=200)),
                ('work_summary', models.TextField()),
                ('work_notes', models.TextField()),
                ('is_complete', models.IntegerField()),
                ('process_status', models.IntegerField()),
                ('word_count', models.IntegerField()),
                ('cover_url', models.CharField(max_length=600)),
                ('cover_alt_text', models.CharField(max_length=600)),
                ('epub_id', models.CharField(max_length=600)),
                ('zip_id', models.CharField(max_length=600)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('anon_comments_permitted', models.BooleanField(default=True)),
                ('comments_permitted', models.BooleanField(default=True)),
                ('tags', models.ManyToManyField(to='api.Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('work_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.WorkType')),
            ],
        ),
        migrations.AddField(
            model_name='tag',
            name='tag_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.TagType'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('route', models.CharField(max_length=200)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.NotificationType')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('message_subject', models.CharField(max_length=200)),
                ('message_content', models.TextField()),
                ('message_read', models.BooleanField(default=False)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_sent', to=settings.AUTH_USER_MODEL)),
                ('replies', models.ManyToManyField(related_name='_message_replies_+', to='api.Message')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_recieved', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('bookmark', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Bookmark')),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Chapter')),
                ('comments', models.ManyToManyField(related_name='_comment_comments_+', to='api.Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='chapter',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Work'),
        ),
        migrations.CreateModel(
            name='BookmarkLink',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('link', models.CharField(max_length=200)),
                ('text', models.CharField(max_length=200)),
                ('bookmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Bookmark')),
            ],
        ),
        migrations.AddField(
            model_name='bookmark',
            name='tags',
            field=models.ManyToManyField(to='api.Tag'),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Work'),
        ),
    ]
